services:
  # kafka:
  #   image: bitnami/kafka:latest
  #   environment:
  #     - KAFKA_ENABLE_KRAFT=true
  #     - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  #     - KAFKA_CFG_PROCESS_ROLES=broker,controller
  #     - KAFKA_CFG_NODE_ID=1
  #     - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@:9093
  #     - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
  #     - KAFKA_CFG_LOG_DIRS=/bitnami/kafka/data # прокинуть на хост
  #   ports:
  #     - "9092:9092"
  #     - "9093:9093"

  #   hostname: localhost
  #   networks:
  #     - kafka-network

  db:
    image: postgres
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    restart: always

  redis:
    image: redis:latest
    container_name: redis_container
    ports:
      - "6380:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./data/redisdata:/data
    restart: always

  project-service:
    build:
      context: .
      dockerfile: Dockerfile.dev
    env_file: .env.dev
    ports:
      - "${SERVICE_PORT}:${SERVICE_PORT}"
    depends_on:
      - db
      - redis
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 10s
      timeout: 5s
      start_period: 30s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - db
    restart: always
    
volumes:
  postgres-data:

# networks:
#   kafka-network:
#     driver: bridge